# Purpose: Build and push Docker image to DockerHub
# SSH on remote server and run docker commands to update running bot
# Currenty deploys on push on any branch for testing

#for development we cant use dockerhub since user-config.yml is not present on repository

name: Docker CICD

on:
  workflow_dispatch:
  # push:
  #   branches:
  #     - "main"

env:
  USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
  TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}
  
  REMOTE_SERVER: ${{ secrets.REMOTE_SERVER }}
  
  SERVER_USERNAME: ${{ secrets.REMOTE_SERVER_USERNAME }}
  SERVER_SSH_KEY: ${{secrets.SERVER_SSH_KEY}}

jobs:
#We cant use this job on dev since theres no userconfig.yml on repo
#  build:
#    runs-on: ubuntu-latest
#    steps:
#      -
#        name: Checkout
#        uses: actions/checkout@v3
#      -
#        name: Login to DockerHub
#        uses: docker/login-action@v2
#        with:
#          username: ${{ env.USERNAME }}
#          password: ${{ env.TOKEN }}
#      -
#        name: Set up Docker Buildx
#        uses: docker/setup-buildx-action@v2
#      -
#        name: Build and push image
#        uses: docker/build-push-action@v2
#        with:
#          context: .
#          file: ./Dockerfile
#          push: true
#          tags: ${{ env.USERNAME }}/progphil-bot:latest
  
  deploy:
#    needs: build
    runs-on: ubuntu-latest
    steps:
      -
        name: Checkout
        uses: actions/checkout@v3
        
      -
        name: Configure SSH Key permissions
        
        run: |
          mkdir -p ~/.ssh/
          echo "$SSH_KEY" > ~/.ssh/pph.key
          chmod 600 ~/.ssh/pph.key
          cat >>~/.ssh/config <<END
          Host staging
            HostName $SSH_HOST
            User $SSH_USER
            IdentityFile ~/.ssh/pph.key
            StrictHostKeyChecking no
          END
        env:
          SSH_USER: ${{ secrets.SERVER_USERNAME }}
          SSH_KEY: ${{ secrets.SERVER_SSH_KEY }}
          SSH_HOST: ${{ secrets.SERVER_HOST }}
          
#      use this to test if key works without third party actions
#      - 
#        name: test SSH using manual ssh
#        run: ssh staging 'touch pph_ssh_test.txt'

      -
        name:  Deploy using on Server
        uses: garygrossgarten/github-action-ssh@release
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          privateKey: ${{ env.SERVER_SSH_KEY }}
          command: |
            cd pph
            git pull
            docker stop progphil-bot-dev || true && docker rm progphil-bot-dev || true
            docker rm progphil-bot-dev
            docker build -t progphil-bot-dev .
            docker run --env token=${{secrets.PPH_TEST_SERVER_BOT_TOKEN }} -it -d  --network="host" --name progphil-bot-dev progphil-bot-dev
            docker image prune -f
            

#      -
#        name: Deploy using on Server
#        uses: garygrossgarten/github-action-ssh@release
#        with:
#          host: ${{ secrets.SERVER_HOST }}
#          username: ${{ secrets.SERVER_USERNAME }}
#          privateKey: ${{ env.SERVER_SSH_KEY }}
#          command: |
#            docker stop progphil-bot || true && docker rm progphil-bot || true
#            docker pull ${{ secrets.DOCKERHUB_USERNAME }}/progphil-bot:latest
#            docker run --env token=${{secrets.PPH_TEST_SERVER_BOT_TOKEN }} --name progphil-bot -it -d ${{ secrets.DOCKERHUB_USERNAME }}/progphil-bot:latest 
#            docker system prune -f
